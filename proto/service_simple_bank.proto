syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "rpc_verify_email.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alrasyidin/simplebank-go/pb";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank Project";
    version: "1.0";
    contact: {
      name: "simple-bank";
      url: "https://github.com/alrasyidin/simplebank";
      email: "hamstergeek38@gmail.com";
    };
  };
};

service SimpleBank{
  rpc CreateUser(CreateUserRequest)  returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/create_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to register user";
      summary: "Create User";
    };
  };
  rpc UpdateUser(UpdateUserRequest)  returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/update_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to login user";
      summary: "Login User";
    };
  };
  rpc LoginUser(LoginUserRequest)  returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/v1/login_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update user";
      summary: "Update User";
    };
  };
  rpc VerifyEmail(VerifyEmailRequest)  returns (VerifyEmailResponse) {
    option (google.api.http) = {
      get: "/v1/verify"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to verify email user";
      summary: "Verify Email User";
    };
  };
}